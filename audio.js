// Global KiddoVerse namespace
var KV = KV || {};
KV.AudioManager = class AudioManager { constructor(camera){ this.listener=new THREE.AudioListener(); if(camera){camera.add(this.listener);}else{console.warn("KV Audio: Cam not provided.");} this.audioLoader=new THREE.AudioLoader(); this.sounds={}; this.soundPaths={place_block:'assets/sounds/place.ogg',remove_block:'assets/sounds/remove_block.mp3',jump:'assets/sounds/jump.ogg',}; this.preloadSounds(); this.scene=null;} preloadSounds(){for(const key in this.soundPaths){const path=this.soundPaths[key];this.audioLoader.load(path,(buffer)=>{this.sounds[key]=buffer;console.log(`KV Audio: Loaded ${key}`);},undefined,(err)=>{console.error(`KV Audio: Error loading ${key} from ${path}`,err);});}} playSound(key,volume=0.5,loop=false){if(!this.sounds[key]){console.warn(`KV Audio: Sound "${key}" not loaded.`);return null;}const sound=new THREE.Audio(this.listener);sound.setBuffer(this.sounds[key]);sound.setLoop(loop);sound.setVolume(this.listener.getMasterVolume()*volume);sound.play();return sound;} playWorldSound(key,position,volume=0.5){if(!this.scene){console.warn(`KV Audio: Scene not set for world sound "${key}".`);return;}if(!this.sounds[key]){console.warn(`KV Audio: Sound "${key}" not loaded.`);return;}const sound=new THREE.PositionalAudio(this.listener);sound.setBuffer(this.sounds[key]);sound.setVolume(this.listener.getMasterVolume()*volume);sound.setRefDistance(KV.BLOCK_SIZE*3);sound.setRolloffFactor(1.5);const emitter=new THREE.Object3D();emitter.position.copy(position);this.scene.add(emitter);emitter.add(sound);sound.play();sound.onEnded=()=>{emitter.remove(sound);this.scene.remove(emitter);};} setScene(scene){this.scene=scene;} setMasterVolume(volume){this.listener.setMasterVolume(Math.max(0,Math.min(1,volume)));}};
console.log("KiddoVerse Themes: AudioManager class loaded (paths adapted).");
