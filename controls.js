// Global KiddoVerse namespace
var KV = KV || {};
KV.Controls = class Controls { constructor(camera,domEl,player,world,gameInst,audioMan){this.camera=camera;this.domElement=domEl;this.player=player;this.world=world;this.game=gameInst;this.audioManager=audioMan;this.isLocked=false;this.keys={};this.moveSpeed=4.5*KV.BLOCK_SIZE;this.lookSpeed=0.002;this.pitch=0;this.yaw=0;this.raycaster=new THREE.Raycaster();this.blockInteractionDistance=6*KV.BLOCK_SIZE;this.lastTouchX=0;this.lastTouchY=0;this.initPointerLock();this.initKeyboard();this.initMouse();this.initTouch();} initPointerLock(){this.domElement.addEventListener('click',()=>{if(!this.isLocked&&!KV.isTouchDevice()){this.domElement.requestPointerLock=this.domElement.requestPointerLock||this.domElement.mozRequestPointerLock||this.domElement.webkitRequestPointerLock;if(this.domElement.requestPointerLock){this.domElement.requestPointerLock();}}});const pLC=()=>{if(document.pointerLockElement===this.domElement||document.mozPointerLockElement===this.domElement||document.webkitPointerLockElement===this.domElement){this.isLocked=true;}else{this.isLocked=false;}};document.addEventListener('pointerlockchange',pLC,false);document.addEventListener('mozpointerlockchange',pLC,false);document.addEventListener('webkitpointerlockchange',pLC,false);} initKeyboard(){document.addEventListener('keydown',(e)=>{if(document.activeElement===document.getElementById('chat-input'))return;this.keys[e.code]=true;});document.addEventListener('keyup',(e)=>{this.keys[e.code]=false;});} initMouse(){document.addEventListener('mousemove',this.onMouseMove.bind(this),false);this.domElement.addEventListener('mousedown',this.onCanvasMouseDown.bind(this),false);} onCanvasMouseDown(e){if(!this.isLocked&&!KV.isTouchDevice())return;if(KV.isTouchDevice())return;if(e.button===0){this.removeBlock();}else if(e.button===2){this.placeBlock();}e.preventDefault();} initTouch(){if(!KV.isTouchDevice())return;this.touchState={moveX:0,moveY:0,lookDeltaX:0,lookDeltaY:0,jump:false,placeBlock:false,removeBlock:false,lookTouchId:null,joystickTouchId:null};const jA=document.getElementById('joystick-area');const jH=document.getElementById('joystick-handle');const jB=document.getElementById('jump-button');const pB=document.getElementById('place-block-button');const rB=document.getElementById('remove-block-button');let jBX,jBY,jR;const setupJ=()=>{const rect=jA.getBoundingClientRect();jBX=rect.left+rect.width/2;jBY=rect.top+rect.height/2;jR=rect.width/2*0.8;jH.style.transform=`translate(${jA.offsetWidth/2-jH.offsetWidth/2}px, ${jA.offsetHeight/2-jH.offsetHeight/2}px)`;};window.addEventListener('resize',setupJ);setupJ();const procJM=(touch)=>{let dx=touch.clientX-jBX;let dy=touch.clientY-jBY;const dist=Math.sqrt(dx*dx+dy*dy);let nX=dx/jR;let nY=dy/jR;if(dist>jR){nX=dx/dist;nY=dy/dist;dx=nX*jR;dy=nY*jR;}jH.style.transform=`translate(${jA.offsetWidth/2-jH.offsetWidth/2+dx}px, ${jA.offsetHeight/2-jH.offsetHeight/2+dy}px)`;this.touchState.moveX=nX;this.touchState.moveY=-nY;};jA.addEventListener('touchstart',(e)=>{e.preventDefault();if(this.touchState.joystickTouchId===null){this.touchState.joystickTouchId=e.changedTouches[0].identifier;procJM(e.changedTouches[0]);}},{passive:false});jA.addEventListener('touchmove',(e)=>{e.preventDefault();for(let i=0;i<e.changedTouches.length;i++){if(e.changedTouches[i].identifier===this.touchState.joystickTouchId){procJM(e.changedTouches[i]);break;}}},{passive:false});jA.addEventListener('touchend',(e)=>{e.preventDefault();for(let i=0;i<e.changedTouches.length;i++){if(e.changedTouches[i].identifier===this.touchState.joystickTouchId){this.touchState.joystickTouchId=null;this.touchState.moveX=0;this.touchState.moveY=0;setupJ();break;}}},{passive:false});this.domElement.addEventListener('touchstart',(e)=>{let tE=e.target;let isB=false;while(tE&&tE!==document.body){if(tE.tagName==='BUTTON'||tE.id==='joystick-area'||tE.id==='chat-widget'||tE.id==='block-selector'){isB=true;break;}tE=tE.parentElement;}if(!isB&&this.touchState.lookTouchId===null){e.preventDefault();const touch=e.changedTouches[0];this.touchState.lookTouchId=touch.identifier;this.lastTouchX=touch.clientX;this.lastTouchY=touch.clientY;}},{passive:false});this.domElement.addEventListener('touchmove',(e)=>{for(let i=0;i<e.changedTouches.length;i++){const touch=e.changedTouches[i];if(touch.identifier===this.touchState.lookTouchId){e.preventDefault();const dX=touch.clientX-this.lastTouchX;const dY=touch.clientY-this.lastTouchY;this.lastTouchX=touch.clientX;this.lastTouchY=touch.clientY;this.touchState.lookDeltaX+=dX;this.touchState.lookDeltaY+=dY;break;}}},{passive:false});this.domElement.addEventListener('touchend',(e)=>{for(let i=0;i<e.changedTouches.length;i++){if(e.changedTouches[i].identifier===this.touchState.lookTouchId){this.touchState.lookTouchId=null;break;}}});jB.addEventListener('touchstart',(e)=>{e.preventDefault();e.stopPropagation();this.touchState.jump=true;},{passive:false});jB.addEventListener('touchend',(e)=>{e.preventDefault();e.stopPropagation();this.touchState.jump=false;},{passive:false});pB.addEventListener('touchstart',(e)=>{e.preventDefault();e.stopPropagation();this.placeBlock();},{passive:false});rB.addEventListener('touchstart',(e)=>{e.preventDefault();e.stopPropagation();this.removeBlock();},{passive:false});} onMouseMove(e){if(!this.isLocked)return;const mX=e.movementX||e.mozMovementX||e.webkitMovementX||0;const mY=e.movementY||e.mozMovementY||e.webkitMovementY||0;this.yaw-=mX*this.lookSpeed;this.pitch-=mY*this.lookSpeed;this.pitch=Math.max(-Math.PI/2,Math.min(Math.PI/2,this.pitch));} getIntersection(){return KV.getIntersection(this.camera,this.world.chunkMeshes.children,this.blockInteractionDistance);} removeBlock(){const inter=this.getIntersection();if(inter&&inter.face){const pos=inter.point.clone().sub(inter.face.normal.clone().multiplyScalar(0.1*KV.BLOCK_SIZE));const bWX=pos.x;const bWY=pos.y;const bWZ=pos.z;const cBT=this.world.getBlock(bWX,bWY,bWZ);const bD=KV.BLOCK_DEFINITIONS[cBT];if(bD&&bD.breakable){this.world.setBlock(bWX,bWY,bWZ,KV.BLOCK_TYPES.AIR);if(this.audioManager){const sP=new THREE.Vector3(Math.floor(bWX/KV.BLOCK_SIZE)+0.5,Math.floor(bWY/KV.BLOCK_SIZE)+0.5,Math.floor(bWZ/KV.BLOCK_SIZE)+0.5).multiplyScalar(KV.BLOCK_SIZE);this.audioManager.playWorldSound('remove_block',sP,0.6);}}}} placeBlock(){const inter=this.getIntersection();if(inter&&inter.face){const pos=inter.point.clone().add(inter.face.normal.clone().multiplyScalar(0.1*KV.BLOCK_SIZE));const bWX=pos.x;const bWY=pos.y;const bWZ=pos.z;const pBB=this.player.boundingBox;const nBB=new THREE.Box3(new THREE.Vector3(Math.floor(bWX/KV.BLOCK_SIZE),Math.floor(bWY/KV.BLOCK_SIZE),Math.floor(bWZ/KV.BLOCK_SIZE)).multiplyScalar(KV.BLOCK_SIZE),new THREE.Vector3(Math.floor(bWX/KV.BLOCK_SIZE)+1,Math.floor(bWY/KV.BLOCK_SIZE)+1,Math.floor(bWZ/KV.BLOCK_SIZE)+1).multiplyScalar(KV.BLOCK_SIZE));if(!pBB.intersectsBox(nBB)){this.world.setBlock(bWX,bWY,bWZ,this.game.currentBlockType);if(this.audioManager){const sP=new THREE.Vector3(Math.floor(bWX/KV.BLOCK_SIZE)+0.5,Math.floor(bWY/KV.BLOCK_SIZE)+0.5,Math.floor(bWZ/KV.BLOCK_SIZE)+0.5).multiplyScalar(KV.BLOCK_SIZE);this.audioManager.playWorldSound('place_block',sP,0.5);}}}} update(dT){if(KV.isTouchDevice()){this.yaw-=this.touchState.lookDeltaX*this.lookSpeed*0.3;this.pitch-=this.touchState.lookDeltaY*this.lookSpeed*0.3;this.pitch=Math.max(-Math.PI/2,Math.min(Math.PI/2,this.pitch));this.touchState.lookDeltaX=0;this.touchState.lookDeltaY=0;}this.camera.quaternion.setFromEuler(new THREE.Euler(this.pitch,this.yaw,0,'YXZ'));const fwd=new THREE.Vector3(0,0,-1).applyQuaternion(this.camera.quaternion);const rgt=new THREE.Vector3(1,0,0).applyQuaternion(this.camera.quaternion);fwd.y=0;fwd.normalize();rgt.y=0;rgt.normalize();let moveDir=new THREE.Vector3();let effMY=KV.isTouchDevice()?this.touchState.moveY:0;let effMX=KV.isTouchDevice()?this.touchState.moveX:0;if(this.keys['KeyW']||effMY>0.1){moveDir.add(fwd.clone().multiplyScalar(this.keys['KeyW']?1:effMY));}if(this.keys['KeyS']||effMY<-0.1){moveDir.add(fwd.clone().multiplyScalar(this.keys['KeyS']?-1:effMY));}if(this.keys['KeyA']||effMX<-0.1){moveDir.add(rgt.clone().multiplyScalar(this.keys['KeyA']?-1:effMX));}if(this.keys['KeyD']||effMX>0.1){moveDir.add(rgt.clone().multiplyScalar(this.keys['KeyD']?1:effMX));}if(moveDir.lengthSq()>0.001){moveDir.normalize();this.player.velocity.x=moveDir.x*this.moveSpeed;this.player.velocity.z=moveDir.z*this.moveSpeed;}else{this.player.velocity.x=0;this.player.velocity.z=0;}if(this.keys['Space']||this.touchState.jump){this.player.jump();}}};
console.log("KiddoVerse: Controls class loaded.");
